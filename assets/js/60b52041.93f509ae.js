"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[73],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=a,y=c["".concat(p,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6700:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={},i="GPG Keys",l={unversionedId:"CLI/GPG Keys",id:"CLI/GPG Keys",title:"GPG Keys",description:"1. Download and install the GPG Privacy Guard for your operating system",source:"@site/docs/CLI/GPG Keys.md",sourceDirName:"CLI",slug:"/CLI/GPG Keys",permalink:"/docs/CLI/GPG Keys",draft:!1,editUrl:"https://github.com/fsiggor/fsiggor.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/CLI/GPG Keys.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Expo",permalink:"/docs/CLI/Expo"},next:{title:"Concurrency",permalink:"/docs/Golang/Concurrency"}},p={},s=[],u={toc:s},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gpg-keys"},"GPG Keys"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Download and install ",(0,a.kt)("a",{parentName:"li",href:"https://www.gnupg.org"},"the GPG Privacy Guard")," for your operating system")),(0,a.kt)("p",null,"Linux"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Debian and Ubuntu\nsudo apt install gnupg\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Arch and Manjaro\nsudo pacman -S gnupg\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Open the terminal and Generate a GPG key pair")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gpg --full-generate-key\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"At the prompt, specify the kind of key you want, or press ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," to accept the default")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"At the prompt, specify the key size you want, or press ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," to accept the default. Your key must be at least ",(0,a.kt)("inlineCode",{parentName:"p"},"4096")," bits")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Enter the length of time the key should be valid. Press ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," to specify the default selection, indicating that the key doesn't expire. Unless you require an expiration date, we recommend accepting this default")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Verify that your selections are correct")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Enter your user ID information and type a secure passphrase."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:"),"\nWhen asked to enter your email address, ensure that you enter the verified email address for your GitHub account. To keep your email address private, use your GitHub-provided ",(0,a.kt)("inlineCode",{parentName:"p"},"no-reply"),' email address. For more information, see "',(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/signing-up-for-github/verifying-your-email-address"},"Verifying your email address"),'" and "',(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address"},"Setting your commit email address"),'."'),(0,a.kt)("ol",{start:8},(0,a.kt)("li",{parentName:"ol"},"Use the ",(0,a.kt)("inlineCode",{parentName:"li"},"gpg --list-secret-keys --keyid-format=long")," command to list the long form of the GPG keys for which you have both a public and private key. A private key is required for signing commits or tags.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gpg --list-secret-keys --keyid-format=long\n")),(0,a.kt)("ol",{start:9},(0,a.kt)("li",{parentName:"ol"},"Paste the text below, substituting in the GPG key ID you'd like to use")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ gpg --armor --export 3AA5C34371567BD2\n# Prints the GPG key ID, in ASCII armor format\n")),(0,a.kt)("ol",{start:10},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Copy your GPG key, beginning with ",(0,a.kt)("inlineCode",{parentName:"p"},"-----BEGIN PGP PUBLIC KEY BLOCK-----")," and ending with ",(0,a.kt)("inlineCode",{parentName:"p"},"-----END PGP PUBLIC KEY BLOCK-----"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add that to your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"\u02dc/.bash_profile")," the line ",(0,a.kt)("inlineCode",{parentName:"p"},"export GPG_TTY=$(tty)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-gpg-key-to-your-github-account"},"Add the GPG key to your GitHub account"),"."))))}m.isMDXComponent=!0}}]);